{"version":3,"sources":["../src/updata.js"],"names":[],"mappings":";;AAEA;;AAEA,MAAM,KAAK,QAAQ,IAAR,CAAL;AACN,MAAM,MAAM,QAAQ,YAAR,CAAN;AACN,MAAM,UAAU,QAAQ,WAAR,CAAV;AACN,MAAM,SAAS,QAAQ,UAAR,CAAT;AACN,MAAM,KAAK,QAAQ,aAAR,CAAL;;AAEN,MAAM,UAAU;AACZ,aAAS,QAAQ,OAAR;AACT,WAAO,QAAQ,KAAR;CAFL;;AAKN,IAAI,CAAC,GAAG,UAAH,CAAc,QAAQ,QAAR,CAAf,EAAkC;AAClC,YAAQ,KAAR,CAAc,IAAI,KAAJ,CAAU,CAAC,MAAD,GAAS,QAAQ,QAAR,EAAiB,WAA1B,CAAV,CAAd,EADkC;AAElC,YAAQ,IAAR,GAFkC;AAGlC,YAAQ,IAAR,CAAa,CAAb,EAHkC;CAAtC;;AAMA,IAAI,eAAe,OAAO,UAAP,CAAkB,QAAQ,UAAR,CAAlB,CACd,MADc,CACP,QAAQ,MAAR,CADR;;AAGJ,IAAI,qBAAqB,SAAS,QAAQ,QAAR,KAAqB,QAArB,GAC5B,MAAM,MAAN,CAAa,QAAQ,CAAC,aAAa,QAAb,CAAsB,IAAtB,CAAD,CADO,GAE5B,KAF4B;;AAIlC,IAAI,YAAY,QAAQ,IAAR,CAAa,MAAb,GAAsB,CAAtB,GACV,QAAQ,IAAR,GACA,mBAAmB,OAAO,YAAP,CAAoB,QAAQ,QAAR,CAAvC,CAFU;;AAIhB,UACK,GADL,CACS,QAAQ,QAAQ,QAAR,GACP,GAAG,IAAH,CAAQ,IAAR,EAAc,OAAd,CADO,GAEP,GAAG,MAAH,CAAU,IAAV,EAAgB,QAAQ,GAAR,EAAa,OAA7B,CAFO,CADjB","file":"updata.js","sourcesContent":["\r\n\r\n'use strict';\r\n\r\nconst fs = require('fs');\r\nconst msg = require('./messages');\r\nconst options = require('./options');\r\nconst parser = require('./parser');\r\nconst hg = require('./mercurial');\r\n\r\nconst logging = {\r\n    verbose: options.verbose,\r\n    quiet: options.quiet\r\n};\r\n\r\nif (!fs.existsSync(options.listFile)) {\r\n    console.error(msg.error(`file (${options.listFile}) not found`));\r\n    options.help();\r\n    process.exit(1);\r\n}\r\n\r\nlet ignoredRepos = parser.ignoreFile(options.ignoreFile)\r\n    .concat(options.ignore);\r\n\r\nlet filterIgnoredRepos = repos => options.listFile === '.hgsub' \r\n    ? repos.filter(repo => !ignoredRepos.includes(repo))\r\n    : repos;\r\n\r\nlet repoPaths = options.list.length > 0\r\n    ? options.list\r\n    : filterIgnoredRepos(parser.repoPathFile(options.listFile));\r\n\r\nrepoPaths\r\n    .map(path => options.pullOnly\r\n        ? hg.pull(path, logging)\r\n        : hg.update(path, options.tag, logging));\r\n"]}